{
    "clean-data\\flask\\app.py": [
        "import os",
        "import sys",
        "import numpy as np",
        "from io import StringIO as SI",
        "from datetime import timedelta",
        "from itertools import chain",
        "from threading import Lock",
        "from werkzeug.datastructures import Headers",
        "from werkzeug.datastructures import ImmutableDict",
        "from werkzeug.exceptions import BadRequest",
        "from werkzeug.exceptions import BadRequestKeyError",
        "from werkzeug.exceptions import HTTPException",
        "from werkzeug.exceptions import InternalServerError",
        "from werkzeug.routing import BuildError",
        "from werkzeug.routing import Map",
        "from werkzeug.routing import RequestRedirect",
        "from werkzeug.routing import RoutingException",
        "from werkzeug.routing import Rule",
        "from werkzeug.wrappers import BaseResponse",
        "from . import cli",
        "from . import json",
        "from .config import Config",
        "from .config import ConfigAttribute",
        "from .ctx import _AppCtxGlobals",
        "from .ctx import AppContext",
        "from .ctx import RequestContext",
        "from .globals import _request_ctx_stack",
        "from .globals import g",
        "from .globals import request",
        "from .globals import session",
        "from .helpers import find_package",
        "from .helpers import get_debug_flag",
        "from .helpers import get_env",
        "from .helpers import get_flashed_messages",
        "from .helpers import get_load_dotenv",
        "from .helpers import locked_cached_property",
        "from .helpers import url_for",
        "from .json import jsonify",
        "from .logging import create_logger",
        "from .scaffold import _endpoint_from_view_func",
        "from .scaffold import _sentinel",
        "from .scaffold import Scaffold",
        "from .scaffold import setupmethod",
        "from .sessions import SecureCookieSessionInterface",
        "from .signals import appcontext_tearing_down",
        "from .signals import got_request_exception",
        "from .signals import request_finished",
        "from .signals import request_started",
        "from .signals import request_tearing_down",
        "from .templating import DispatchingJinjaLoader",
        "from .templating import Environment",
        "from .wrappers import Request",
        "from .wrappers import Response",
        "from .debughelpers import explain_ignored_app_run",
        "from werkzeug.serving import run_simple",
        "from .testing import FlaskClient as cls",
        "from .testing import FlaskCliRunner as cls",
        "from .debughelpers import FormDataRoutingRedirect",
        "from .testing import EnvironBuilder"
    ],
    "clean-data\\flask\\blueprints.py": [
        "from functools import update_wrapper",
        "from .scaffold import _endpoint_from_view_func",
        "from .scaffold import _sentinel",
        "from .scaffold import Scaffold",
        "from warnings import warn"
    ],
    "clean-data\\flask\\cli.py": [
        "import ast",
        "import inspect",
        "import os",
        "import platform",
        "import re",
        "import sys",
        "import traceback",
        "import warnings",
        "from functools import update_wrapper",
        "from operator import attrgetter",
        "from threading import Lock",
        "from threading import Thread",
        "import click",
        "from werkzeug.utils import import_string",
        "from .globals import current_app",
        "from .helpers import get_debug_flag",
        "from .helpers import get_env",
        "from .helpers import get_load_dotenv",
        "import dotenv",
        "import ssl",
        "from . import Flask",
        "from . import Flask",
        "raise NoAppException(f\"Could not import {module_name!r}.\")",
        "import werkzeug",
        "from . import __version__",
        "import pkg_resources",
        "import cryptography",
        "from werkzeug.serving import run_simple",
        "import code",
        "from .globals import _app_ctx_stack"
    ],
    "clean-data\\flask\\config.py": [
        "import errno",
        "import os",
        "import types",
        "from werkzeug.utils import import_string"
    ],
    "clean-data\\flask\\ctx.py": [
        "import sys",
        "from functools import update_wrapper",
        "from werkzeug.exceptions import HTTPException",
        "from .globals import _app_ctx_stack",
        "from .globals import _request_ctx_stack",
        "from .signals import appcontext_popped",
        "from .signals import appcontext_pushed"
    ],
    "clean-data\\flask\\debughelpers.py": [
        "import os",
        "from warnings import warn",
        "from .app import Flask",
        "from .blueprints import Blueprint",
        "from .globals import _request_ctx_stack"
    ],
    "clean-data\\flask\\globals.py": [
        "from functools import partial",
        "from werkzeug.local import LocalProxy",
        "from werkzeug.local import LocalStack"
    ],
    "clean-data\\flask\\helpers.py": [
        "import io",
        "import mimetypes",
        "import os",
        "import pkgutil",
        "import posixpath",
        "import socket",
        "import sys",
        "import unicodedata",
        "from functools import update_wrapper",
        "from threading import RLock",
        "from time import time",
        "from zlib import adler32",
        "from jinja2 import FileSystemLoader",
        "from werkzeug.datastructures import Headers",
        "from werkzeug.exceptions import BadRequest",
        "from werkzeug.exceptions import NotFound",
        "from werkzeug.exceptions import RequestedRangeNotSatisfiable",
        "from werkzeug.routing import BuildError",
        "from werkzeug.urls import url_quote",
        "from werkzeug.wsgi import wrap_file",
        "from .globals import _app_ctx_stack",
        "from .globals import _request_ctx_stack",
        "from .globals import current_app",
        "from .globals import request",
        "from .globals import session",
        "from .signals import message_flashed",
        "from warnings import warn",
        "\" came from an import hook that does not provide file\"",
        "\" for PEP 302 import hooks.\"",
        "import importlib.util",
        "from .cli import AppGroup"
    ],
    "clean-data\\flask\\logging.py": [
        "import logging",
        "import sys",
        "from werkzeug.local import LocalProxy",
        "from .globals import request"
    ],
    "clean-data\\flask\\scaffold.py": [
        "from functools import update_wrapper",
        "from werkzeug.exceptions import default_exceptions",
        "from werkzeug.exceptions import HTTPException",
        "from .helpers import _PackageBoundObject",
        "from .templating import _default_template_ctx_processor",
        "\"To fix this make sure to import all your view modules, \""
    ],
    "clean-data\\flask\\sessions.py": [
        "import hashlib",
        "import warnings",
        "from collections.abc import MutableMapping",
        "from datetime import datetime",
        "from itsdangerous import BadSignature",
        "from itsdangerous import URLSafeTimedSerializer",
        "from werkzeug.datastructures import CallbackDict",
        "from .helpers import is_ip",
        "from .helpers import total_seconds",
        "from .json.tag import TaggedJSONSerializer"
    ],
    "clean-data\\flask\\signals.py": [
        "from blinker import Namespace"
    ],
    "clean-data\\flask\\templating.py": [
        "from jinja2 import BaseLoader",
        "from jinja2 import Environment as BaseEnvironment",
        "from jinja2 import TemplateNotFound",
        "from .globals import _app_ctx_stack",
        "from .globals import _request_ctx_stack",
        "from .signals import before_render_template",
        "from .signals import template_rendered",
        "from .debughelpers import explain_template_loading_attempts"
    ],
    "clean-data\\flask\\testing.py": [
        "from contextlib import contextmanager",
        "import werkzeug.test",
        "from click.testing import CliRunner",
        "from werkzeug.test import Client",
        "from werkzeug.urls import url_parse",
        "from . import _request_ctx_stack",
        "from .cli import ScriptInfo",
        "from .json import dumps as json_dumps"
    ],
    "clean-data\\flask\\views.py": [
        "from .globals import request"
    ],
    "clean-data\\flask\\wrappers.py": [
        "from werkzeug.exceptions import BadRequest",
        "from werkzeug.wrappers import Request as RequestBase",
        "from werkzeug.wrappers import Response as ResponseBase",
        "from werkzeug.wrappers.json import JSONMixin as _JSONMixin",
        "from . import json",
        "from .globals import current_app",
        "from .debughelpers import attach_enctype_error_multidict"
    ],
    "clean-data\\flask\\__init__.py": [
        "from markupsafe import escape",
        "from markupsafe import Markup",
        "from werkzeug.exceptions import abort",
        "from werkzeug.utils import redirect",
        "from . import json",
        "from .app import Flask",
        "from .app import Request",
        "from .app import Response",
        "from .blueprints import Blueprint",
        "from .config import Config",
        "from .ctx import after_this_request",
        "from .ctx import copy_current_request_context",
        "from .ctx import has_app_context",
        "from .ctx import has_request_context",
        "from .globals import _app_ctx_stack",
        "from .globals import _request_ctx_stack",
        "from .globals import current_app",
        "from .globals import g",
        "from .globals import request",
        "from .globals import session",
        "from .helpers import flash",
        "from .helpers import get_flashed_messages",
        "from .helpers import get_template_attribute",
        "from .helpers import make_response",
        "from .helpers import safe_join",
        "from .helpers import send_file",
        "from .helpers import send_from_directory",
        "from .helpers import stream_with_context",
        "from .helpers import url_for",
        "from .json import jsonify",
        "from .signals import appcontext_popped",
        "from .signals import appcontext_pushed",
        "from .signals import appcontext_tearing_down",
        "from .signals import before_render_template",
        "from .signals import got_request_exception",
        "from .signals import message_flashed",
        "from .signals import request_finished",
        "from .signals import request_started",
        "from .signals import request_tearing_down",
        "from .signals import signals_available",
        "from .signals import template_rendered",
        "from .templating import render_template",
        "from .templating import render_template_string"
    ],
    "clean-data\\flask\\__main__.py": [
        "from .cli import main"
    ],
    "clean-data\\flask\\json\\tag.py": [
        "from base64 import b64decode",
        "from base64 import b64encode",
        "from datetime import datetime",
        "from uuid import UUID",
        "from markupsafe import Markup",
        "from werkzeug.http import http_date",
        "from werkzeug.http import parse_date",
        "from ..json import dumps",
        "from ..json import loads"
    ],
    "clean-data\\flask\\json\\__init__.py": [
        "import io",
        "import json as _json",
        "import uuid",
        "import warnings",
        "from datetime import date",
        "from datetime import datetime",
        "from markupsafe import Markup",
        "from werkzeug.http import http_date",
        "from ..globals import current_app",
        "from ..globals import request",
        "import dataclasses"
    ]
}